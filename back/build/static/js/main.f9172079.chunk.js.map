{"version":3,"sources":["services/phonebook.js","components/Form.js","components/Number.js","components/Filter.js","App.js","index.js"],"names":["baseURL","axios","get","then","res","data","newNumber","post","id","delete","updatedNumber","put","Input","text","value","onChange","Form","numbers","setNumbers","setMessage","useState","newName","setNewName","newPhone","setNewPhone","control","setter","e","target","onSubmit","preventDefault","match","find","number","name","window","confirm","phone","phoneService","map","catch","type","setTimeout","addedNumber","concat","Number","handleDelete","onClick","Filter","Message","message","className","App","filterPhrase","setFilterPhrase","useEffect","phonebook","filteredNumbers","filter","toLowerCase","includes","key","delNumber","deletedNumber","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9172079.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseURL = '/api/persons'\n\nconst getAll = () => axios.get(baseURL)\n  .then(res => res.data)\n\nconst create = (newNumber) => \naxios.post(baseURL, newNumber)\n  .then(res => res.data)\n\nconst deleteNumber = (id) => axios.delete(`${baseURL}/${id}`)\n  .then(res => res.data)\n\nconst update = (updatedNumber) => axios.put(`${baseURL}/${updatedNumber.id}`, updatedNumber)\n  .then(res => res.data)\n\n\nexport default {\n  getAll,\n  create,\n  deleteNumber,\n  update\n}","import React, { useState} from 'react'\nimport phoneService from '../services/phonebook'\n\nconst Input = ({ text, value, onChange }) => (\n  <div>\n    {text}: <input \n      value={value}\n      onChange={onChange}\n    />\n</div>\n)\n\nconst Form = ({ numbers, setNumbers, setMessage }) => {\n\n  // STATE\n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone ] = useState('')\n\n  // INPUT control for  Form\n  const control = (setter) => (e) => setter(e.target.value)\n\n  // can be made extensive with regex\n  const isValid = (number) => {\n    const phonePattern = /^[0-9+][0-9 -]+$/\n    return number.match(phonePattern)\n  }\n\n  const addPerson = (e) => {\n    e.preventDefault()\n\n    // handle no number\n    if (!isValid(newPhone)) {\n      setMessage({\n        text: 'No valid phone number has been given',\n        type: 'error'\n      })\n      setTimeout(() => setMessage(null), 3000)\n    } else { \n      const updatedNumber = numbers.find(number => number.name === newName)\n      if (updatedNumber) { // handle person exists\n        if (window.confirm(`Do you want to change ${newName}'s number?`) === true) {\n          const newNumber = {\n            ...updatedNumber,\n            phone: newPhone\n          }\n          phoneService\n          .update(newNumber)\n            .then(updatedNumber => {\n              setNumbers(numbers.map(number => (number.id === newNumber.id)\n                ? newNumber\n                : number\n              ))\n            })\n            .catch(e => {\n              setMessage({text: 'not on server', type: 'error'})\n              setTimeout(() => setMessage(null), 3000)\n            })\n          setMessage({\n            text: `${newName} has a new phone number`,\n            type: 'success'\n          })\n          setTimeout(() => setMessage(null), 3000)\n        } else {\n          setMessage({\n            text: `${newName} is already taken`,\n            type: 'error'\n          })\n          setTimeout(() => setMessage(null), 3000)\n        }\n      } else {\n        let newNumber = {\n          name:newName,\n          phone: newPhone\n        }\n        phoneService.create(newNumber)\n          .then((addedNumber) => {\n            setNumbers(numbers.concat(addedNumber))\n          })\n        setMessage({\n          text: `${newName} has been added to phone list`,\n          type: 'success'\n        })\n        setTimeout(() => setMessage(null), 3000)\n      }\n      setNewName('')\n      setNewPhone('')\n    } \n  }\n\n  return (\n    <div>\n      <h2>Add new person</h2>\n      <form onSubmit={addPerson}>\n        <Input text=\"name\" value={newName} onChange={control(setNewName)} />\n        <Input text=\"phone\" value={newPhone} onChange={control(setNewPhone)} />\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n\n  )\n\n}\nexport default Form","import React from 'react'\n\nconst Number = ({ number, handleDelete }) => (\n  <div>\n    <p><strong>{number.name}</strong>: {number.phone}</p>\n    <button onClick={handleDelete}>delete</button>\n  </div>\n    )\n\nexport default Number","import React from 'react'\n\nconst Filter = ({value, onChange}) => (\n    <div>Filter: <input value={value} onChange={onChange} />\n      </div>\n)\n\nexport default Filter","import React, { useState, useEffect } from 'react'\nimport Form from './components/Form'\nimport Number from './components/Number'\nimport Filter from './components/Filter'\nimport phoneService from './services/phonebook'\nimport './index.css'\n\n\nconst Message = ({message}) => (message)\n? <div className={message.type}>\n   <p>{message.text}</p>\n </div> \n : null\n\n\nconst App = () => {\n\n  // STATE\n  const [ numbers, setNumbers] = useState([])\n  const [ message, setMessage ] = useState(null)\n  const [ filterPhrase, setFilterPhrase ] = useState('') \n\n  useEffect(() => {\n    phoneService.getAll().then(phonebook => setNumbers(phonebook))\n  },[])\n\n\n  // HELPERS\n\n\n  const handleDelete = (delNumber) => () => {\n    phoneService.deleteNumber(delNumber.id)\n      .then(deletedNumber => {\n        setMessage({\n          text: `${delNumber.name} deleted`,\n          type: 'warning'\n        })\n        setTimeout(() => setMessage(null), 3000)\n        setNumbers(numbers.filter(number => number.id !== delNumber.id))\n      })\n      .catch(e => {\n        setMessage({text: 'not on server', type: 'error'})\n        setTimeout(() => {\n          setMessage(null)\n          setNumbers(numbers.filter(number => number.id !== delNumber.id))\n        }, 3000)\n      })\n  }\n\n  const filteredNumbers = filterPhrase\n    ? numbers.filter(number => number.name.toLowerCase().includes(filterPhrase) )\n    : numbers\n\n  const showNumbers = () => filteredNumbers.map(number => <Number \n      key={number.id} \n      number={number}\n      handleDelete={handleDelete(number)}\n    />)\n\n  const handleFilter = (e) => setFilterPhrase(e.target.value.toLowerCase())\n\n  return (\n    <div>\n      <Message message={message} />\n      <h2>Phonebook</h2>\n      <Filter value={filterPhrase} onChange={handleFilter} />\n      \n      <Form \n        numbers={numbers}\n        setNumbers={setNumbers}\n        setMessage={setMessage}\n      />\n      <h2>Numbers</h2>\n      {showNumbers()}\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}